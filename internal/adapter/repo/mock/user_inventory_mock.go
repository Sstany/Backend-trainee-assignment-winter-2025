// Code generated by MockGen. DO NOT EDIT.
// Source: ./user_inventory.go

// Package repo is a generated GoMock package.
package repo

import (
	context "context"
	reflect "reflect"
	entity "shop/internal/app/entity"
	port "shop/internal/app/port"

	gomock "github.com/golang/mock/gomock"
)

// MockUserInventoryRepo is a mock of UserInventoryRepo interface.
type MockUserInventoryRepo struct {
	ctrl     *gomock.Controller
	recorder *MockUserInventoryRepoMockRecorder
}

// MockUserInventoryRepoMockRecorder is the mock recorder for MockUserInventoryRepo.
type MockUserInventoryRepoMockRecorder struct {
	mock *MockUserInventoryRepo
}

// NewMockUserInventoryRepo creates a new mock instance.
func NewMockUserInventoryRepo(ctrl *gomock.Controller) *MockUserInventoryRepo {
	mock := &MockUserInventoryRepo{ctrl: ctrl}
	mock.recorder = &MockUserInventoryRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserInventoryRepo) EXPECT() *MockUserInventoryRepoMockRecorder {
	return m.recorder
}

// AddItem mocks base method.
func (m *MockUserInventoryRepo) AddItem(tx port.Transaction, username, item string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddItem", tx, username, item)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddItem indicates an expected call of AddItem.
func (mr *MockUserInventoryRepoMockRecorder) AddItem(tx, username, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddItem", reflect.TypeOf((*MockUserInventoryRepo)(nil).AddItem), tx, username, item)
}

// Get mocks base method.
func (m *MockUserInventoryRepo) Get(ctx context.Context, username string) ([]entity.Inventory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, username)
	ret0, _ := ret[0].([]entity.Inventory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockUserInventoryRepoMockRecorder) Get(ctx, username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUserInventoryRepo)(nil).Get), ctx, username)
}
